using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Timers;

namespace myAssignment
{
    class Pump
    {
        private const int SPEED = 5;
        private enum PumpState { Empty, Busy };
        private PumpState state = PumpState.Empty;
        public int id;

        public Pump(int _id)
        {
            id = _id;
        }

        public void PumpLine()
        {
            switch (state)
            {
                case PumpState.Empty:
                default:
                    //Console.WriteLine("Empty");
                    try
                    {
                        if (Program.queue.Peek() != null)
                        {
                            state = PumpState.Busy;
                            Vehicle v = Program.queue.Dequeue();
                            double workTime = v.HowMuchFuelNeeded() / SPEED;
                            PumpTimer(workTime);
                            Console.WriteLine("{0}: Busy, {1}, {2} secs.", id, v.GetType().Name, workTime);
                        }
                    }
                    catch (Exception)
                    {
                    }
                    break;

                case PumpState.Busy:
                    break;
            }
        }

        void PumpTimer(double interval)
        {
            Timer FuelTimer = new Timer();
            FuelTimer.Interval = interval*1000;
            FuelTimer.Enabled = true;
            FuelTimer.Elapsed += PumpBusy;
        }

        private void PumpBusy(object sender, ElapsedEventArgs e)
        {
            state = PumpState.Empty;
            Console.WriteLine("{0}: Empty", id);
        }

//        if (Program.queue.Count != 0)
//            {
//                Program.queue.Peek();
//                Program.queue.Dequeue();
//                state = PumpState.Busy;
//                Console.WriteLine(state);
//                PumpTimer();
//        checkState = false;
//            }
//            else
//                state = PumpState.Empty;
//            Console.WriteLine(state);
//



    }
}
